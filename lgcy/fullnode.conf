net {
  type = mainnet
  # type = testnet
}

storage {
  # Directory for storing persistent data

  db.version = 2,
  db.engine = "LEVELDB",
  db.directory = "database",
  index.directory = "index",

  # You can custom these 14 databases' configs:

  # account, account-index, asset-issue, block, block-index,
  # block_KDB, peers, properties, recent-block, trans,
  # utxo, votes, witness, witness_schedule.

  # Otherwise, db configs will remain defualt and data will be stored in
  # the path of "output-directory" or which is set by "-d" ("--output-directory").

  # Attention: name is a required field that must be set !!!
  properties = [
    //    {
    //      name = "account",
    //      path = "storage_directory_test",
    //      createIfMissing = true,
    //      paranoidChecks = true,
    //      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
    //    {
    //      name = "account-index",
    //      path = "storage_directory_test",
    //      createIfMissing = true,
    //      paranoidChecks = true,
    //      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
  ]

}

# this part of config is used to node discovery.
node.discovery = {
  enable = true  # you should set this entry value with ture if you want your node can be discovered by other node.
  persist = true  # this entry is used to determined to whether storing the peers in the database or not.
  bind.ip = ""
  external.ip = 127.0.0.1
}

# this part of config is used to set backup node for witness service.
node.backup {
  port = 10001
  priority = 8
  members = [
  ]
}

node {
  # trust node for solidity node
  # trustNode = "ip:port"
  trustNode = "127.0.0.1:50051"

  # expose extension api to public or not
  walletExtensionApi = true

  listen.port = 16666

  connection.timeout = 2

  tcpNettyWorkThreadNum = 0

  udpNettyWorkThreadNum = 1

  # Number of validate sign thread, default availableProcessors / 2
  # validateSignThreadNum = 16

  maxActiveNodes = 30

  maxActiveNodesWithSameIp = 2

  minParticipationRate = 0

  # check the peer data transfer ,disconnect factor
  disconnectNumberFactor = 0.4
  maxConnectNumberFactor = 0.8
  receiveTcpMinDataLength = 2048
  isOpenFullTcpDisconnect = true

  p2p {
    version = 22222 # 11111: mainnet; 20180622: testnet; you can set other number when you deploy one private net, but the node must have the same number in some private net. 
  }

  active = [
    # Active establish connection in any case
    # Sample entries:
    # "ip:port",
    # "ip:port"
  ]

  passive = [
    # Passive accept connection in any case
    # Sample entries:
    # "ip:port",
    # "ip:port"
  ]

  http {
    fullNodePort = 16667
    solidityPort = 16668
  }

  rpc {
    port = 50051

    # Number of gRPC thread, default availableProcessors / 2
    # thread = 16

    # The maximum number of concurrent calls permitted for each incoming connection
    # maxConcurrentCallsPerConnection =

    # The HTTP/2 flow control window, default 1MB
    # flowControlWindow =

    # Connection being idle for longer than which will be gracefully terminated
    maxConnectionIdleInMillis = 60000

    # Connection lasting longer than which will be gracefully terminated
    # maxConnectionAgeInMillis =

    # The maximum message size allowed to be received on the server, default 4MB
    # maxMessageSize =

    # The maximum size of header list allowed to be received, default 8192
    # maxHeaderListSize =

    # Transactions can only be broadcast if the number of effective connections is reached.
    minEffectiveConnection = 0
  }

}



seed.node = {
  # List of the seed nodes. This is used to enable the node can connect when join one net at first.
  # If you deploy one private net, you must add some "ip:port" here for other node connecting.
  # Seed nodes are stable full nodes, and the first SuperNode must be inclued in.
  # example:
  # ip.list = [
  #   "ip:port",
  #   "ip:port"
  # ]
  ip.list = [
    "143.110.240.35:16666"
  ]
}

genesis.block = {
  # Reserve balance
  assets = [
       {
      accountName = "Zion"
      accountType = "AssetIssue"
      address = "Lej3aiBizytWgRUCHBYBAEcxsedfUwMML2"
      balance = "95000000000000000"
    },
    {
      accountName = "Sun"
      accountType = "AssetIssue"
      address = "LUyz7rvAAwZV6Qts1FSP5fRxxmfoHjSJkT"
      balance = "5000000000000000"
    },
    {
      accountName = "Blackhole"
      accountType = "AssetIssue"
      address = "LfnBEE21LfBRoFYETtrYXRCuP92NDhsMkE"
      balance = "-9223372036854775808"
    },
    {
      accountName = "USDL"
      accountType = "AssetIssue"
      address = "LYkwBR8gQGp3heu555TonYHMjj2S3ByJhU"
      balance = "10000000000000"
    },
    {
      accountName = "TestUsdl"
      accountType = "AssetIssue"
      address = "LU272q5jqbeMC9rfuhPi26ybehMhbk9qTn"
      balance = "1000000000000"
    },
  ]

  witnesses = [
    {
      address: LKcYhpHUiqRcsxMmsXBYzuqi7nbMcYhtmv,
      url = "http://w1.com",
      voteCount = 10200
    },
     {
      address: LU272q5jqbeMC9rfuhPi26ybehMhbk9qTn,
      url = "http://w2.com",
      voteCount = 10001
    },
     {
      address: Lf6yvPx3VBHwnJZMVbM2aGHUJV7tiURmVG,
      url = "http://w3.com",
      voteCount = 10002
    },
     {
      address: LiEgMGMUGteLzZQhZa2AG16xSdEH9i1J87,
      url = "http://w4.com",
      voteCount = 10003
    },
    {
      address: LNmwzzaL5Quft79rZu3Q4S84UCeDrBBnj2,
      url = "http://w5.com",
      voteCount = 10004
    },
    {
      address: LW1j9vvrPMsnHRdyULBTYrTfGPcbFx9w7w,
      url = "http://w6.com",
      voteCount = 10005
    },
    {
      address: LWjasw93L5aZCAmJkhhGNHCMEjPjLFUyYu,
      url = "http://w7.com",
      voteCount = 10006
    },
    {
      address: LXVd936JJ6rQwdgsXDnKVH8GGiiJeYGwhN,
      url = "http://w8.com",
      voteCount = 10007
    },
    {
      address: LLGo1qQ7JB7idcJP4WAHcyg4QaiGpQT337,
      url = "http://w9.com",
      voteCount = 10008
    },
    {
      address: LSmUWebcCTxpwwsfeorLNraBypxGuJzDkH,
      url = "http://w10.com",
      voteCount = 10009
    },
    {
      address: LQrmgcg5vXdfsFz4MkcnVdqWLH3pkqtLRg,
      url = "http://w11.com",
      voteCount = 10010
    },
    {
      address: LeXZHUzvHiFVsNScyJ1bGP14m6rUXKipH9,
      url = "http://w12.com",
      voteCount = 10011
    },
    {
      address: LcZHbrPv8XVomsq6PtJrDwzLo8ucQmB2XM,
      url = "http://w13.com",
      voteCount = 10012
    },
    {
      address: LarT6qZhn8HGYk12GcpGaACAz5xJ2nh8X5,
      url = "http://w14.com",
      voteCount = 10013
    },
    {
      address: LcKug4JMZ7GMxhim3nwvy5TYSDFEQ73Nep,
      url = "http://w15.com",
      voteCount = 10014
    },
    {
      address: LfuwEvpC3v1xEuBXMzj7GGc2a5oW8omhyp,
      url = "http://w16.com",
      voteCount = 10015
    },
     {
      address: LfmT5pvcEA6Zi26Va8f7XhC5YRgN6ZmqdM,
      url = "http://w17.com",
      voteCount = 10016
    },
     {
      address: LMko9wMreXmzcBfgV1qEviMCHaciojWNNJ,
      url = "http://w18.com",
      voteCount = 10017
    },
     {
      address: LSaH2rMfwWMEwoQreEzCKVxzDGFcJVESUF,
      url = "http://w19.com",
      voteCount = 10018
    },
     {
      address: LVcqxM2BrcpMqjL5CXAw8TJ4MTcTGp95Yr,
      url = "http://w20.com",
      voteCount = 10019
    },
     {
      address: LL9RrbDCUe7cWeAsTkXxVRjDV2jy9DaUgb,
      url = "http://w21.com",
      voteCount = 10020
    },
     {
      address: LPyzB8VwPgPt9DHR9TPkPJo3dsB2bDWkn1,
      url = "http://w22.com",
      voteCount = 10021
    },
     {
      address: LazExghBunA1oocLKJBHQitJhK4NyH2WiX,
      url = "http://w23.com",
      voteCount = 10022
    },
     {
      address: LQJwkdLPXSUUMt2s67ptTMoKA6Fvzx5yA3,
      url = "http://w24.com",
      voteCount = 10023
    },
     {
      address: LTxWivd3JbkMzJQLo7KL246hVbKjxJDJp5,
      url = "http://w25.com",
      voteCount = 10024
    },
     {
      address: LZ1paLmQjRPFxRY2Ky1wW3vUrD7D9vMaoa,
      url = "http://w26.com",
      voteCount = 10025
    },
     {
      address: LU7u9tMo62pL6QAC5bJ2zrE4S6QwLzZBZ1,
      url = "http://w27.com",
      voteCount = 10026
    }
  ]

  timestamp = "0" #2017-8-26 12:00:00

  parentHash = "957dc2d350daecc7bb6a38f3938ebde0a0c1cedafe15f0edae4256a2907449f6"
}

localwitness = [
  5d4ef569d9515ab3ba774daae69a56d252ac34f688270f24af2addcbf995f60d # you must enable this value and the witness address are match.
]

#localwitnesskeystore = [
#  "src/main/resources/localwitnesskeystore.json"  # if you do not set the localwitness above, you must set this value.Otherwise,your SuperNode can not produce the block. 
#]

block = {
  needSyncCheck = true # first node : false, other : true
  maintenanceTimeInterval = 21600000 // 1 day: 86400000(ms), 6 hours: 21600000(ms)
}


vm = {
  supportConstant = true
  minTimeRatio = 0.0
  maxTimeRatio = 5.0
}

committee = {
allowCreationOfContracts = 1  //mainnet:0 (reset by committee),test:1
  allowSameTokenName = 1
  allowDelegateResource = 1
  allowLvmTransferTrc10 = 1
  allowMultiSign = 1 //mainnet:0 (reset by committee),test:1
  allowLvmConstantinople = 1
  changedDelegation = 1
  allowLvmSolidity059 = 1
  allowMarketTransaction = 1
}

event.subscribe = {
  native = {
    useNativeQueue = true // if true, use native message queue, else use event plugin.
    bindport = 5555 // bind port
    sendqueuelength = 1000 //max length of send queue
  }

  path = "" // absolute path of plugin
  server = "" // target server address to receive event triggers
  dbconfig = "" // dbname|username|password
  contractParse = true,
  topics = [
    {
      triggerName = "block" // block trigger, the value can't be modified
      enable = false
      topic = "block" // plugin topic, the value could be modified
    },
    {
      triggerName = "transaction"
      enable = false
      topic = "transaction"
    },
    {
      triggerName = "contractevent"
      enable = false
      topic = "contractevent"
    },
    {
      triggerName = "contractlog"
      enable = false
      topic = "contractlog"
    },
    {
      triggerName = "solidity" // solidity block event trigger, the value can't be modified
      enable = true            // the default value is true
      topic = "solidity"
    }
  ]

  filter = {
    fromblock = "" // the value could be "", "earliest" or a specified block number as the beginning of the queried range
    toblock = "" // the value could be "", "latest" or a specified block number as end of the queried range
    contractAddress = [
      "" // contract address you want to subscribe, if it's set to "", you will receive contract logs/events with any contract address.
    ]

    contractTopic = [
      "" // contract topic you want to subscribe, if it's set to "", you will receive contract logs/events with any contract topic.
    ]
  }
}

